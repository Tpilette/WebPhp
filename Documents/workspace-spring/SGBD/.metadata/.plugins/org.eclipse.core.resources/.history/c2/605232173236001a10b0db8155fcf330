package be.ipam.sgbd.Services;

import java.util.*;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import be.ipam.sgbd.Model.Book;
import be.ipam.sgbd.Model.Copy;
import be.ipam.sgbd.Model.Edition;
import be.ipam.sgbd.Repository.BookDAO;


	
@Service
public class BookService {
	
	@Autowired
	private BookDAO bookDAO;
	
	public Iterable<Book> getBooks(){
		
		return bookDAO.findAll();
		
	}
	
	public Book addBook(Book book){
		return (bookDAO.save(book));
	}
	
	public Optional<Book> getBookById(long id){
	
		return bookDAO.findById(id);
	}
	
	public void deleteBook(long id) {
		
		 bookDAO.deleteById(id);
	}
	
	
	//get all edition for a book => then for all edition get copies => filter by available and return result	
	public List<Copy> getAvailableCopy(Book book) {
	
		List<Copy> availableCopies = new ArrayList<Copy>();

		//get Editions of the book
		List<Edition> editions = book.getEditions();
		
		
		List<Copy> copies = new ArrayList<Copy>();
		
		// get all copies of all book editions
		editions.forEach(ed -> copies.addAll(ed.getCopies()));
		
		//filter copies by available one		
		availableCopies = copies.stream().filter(d -> 
												d.getCopyStatus()
												.getCopyStatusId() == 1 )
				.collect(Collectors.toList());

	
		//return available copies
		return availableCopies;
	
	}
}
